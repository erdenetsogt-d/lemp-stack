---
- name: Update cache
  apt:
    update_cache: yes

#- meta: flush_handlers
- name: Update all packages to their latest version
  apt:
    name: "*"
    state: latest
# tasks file for lets
- name: "Check package manager"
  package_facts:
    manager: "auto"
  tags:
  - tig-stack

- name: Set timezone 
  timezone:
    name: "{{ timezone }}"

- name: Check user created or not
  stat:
    path: /home/{{ user_name }}
  register: user_created 

- name: User Creation Task
  include_tasks: user.yml
  when: not user_created.stat.exists

- name: Check NGINX package installed or not
  include_tasks: install/install-nginx.yml
  when: "'nginx' not in ansible_facts.packages"
  register: nginx_installed

- name: Set laravel webroot config 
  set_fact:
    webroot_path: "/home/{{user_name}}/web/{{vhost_domain}}/public_html/public"
  when: laravel


- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/lets-variables.yaml"


- name: Check lets encrypt related package installed or not
  include_tasks: install/install-lets.yml
  when: lets_encrypt
 
- name: Check vhost already created or not
  stat:
    path: /home/{{ user_name }}/web/{{vhost_domain}}
  register: web

- name: "NGINX add vhost config"
  include_tasks: config/vhost-nginx.yml
  when: not web.stat.exists

- name: Check Lets encrypt required
  include_tasks: config/conf-lets.yml
  when: lets_encrypt and vhost_use_ssl


- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/ubuntu-mariadb.yml"

- name: install mariadb
  include_tasks: mariadb/maria-main.yml
  when: install_mariadb==true and 'mariadb-server' not in ansible_facts.packages
- name: Backup DB section
  include_tasks: backup/main.yml
  when: backup == true
  tags:
  - backup

- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/php-fpm.yml"
  tags:
  - php-fpm.install  

  


#Setup install PHP-FPM
- name: Check PHP-FPM required
  include_tasks: php-fpm/main.yml
  when: install_phpfpm and new_install
  tags:
  - php-fpm.install

- name: Configure FPM pools
  template:
    src: pool.conf.j2
    dest: "/etc/php/{{ php_version }}/fpm/pool.d/{{ pool.name }}.conf"
  vars:
    pool: "{{ php_fpm_pool_defaults | combine(pool_) }}"
  loop: "{{ php_fpm_pools }}"
  loop_control:
    loop_var: pool_
  notify: reload php-fpm
  when: new_install == false and not web.stat.exists

- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/tig.yml"
    
- name: install TIG stack
  include_tasks: install/install_tig.yml
  when: "'grafana' not in ansible_facts.packages and new_install"
  tags:
  - tig-stack